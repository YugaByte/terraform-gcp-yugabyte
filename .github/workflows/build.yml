name: Repository Dispatch
on:
  push:
  pull_request:
  repository_dispatch:
    types: build-on-release
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: github.event_name != 'repository_dispatch' || github.event.client_payload.prerelease == 'false'
    env:
      GCP_KEY: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      GOOGLE_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }} 
    steps:
    - name: Tag for Repository Dispatch event
      if: github.event_name == 'repository_dispatch'
      run: |
           tag_name="${{ github.event.client_payload.tag }}"
           version_number="$(echo "$tag_name" | sed 's/v//')" 
           count="$(echo "$version_number" | awk -F"." '{print NF-1}')"
           if [[ $count -eq 2 ]]; then 
             version_number="$(echo "$version_number" | sed 's/$/.0/')"
           fi
           if [[ "$(echo "$version_number" | awk -F"." '{print NF-1}')" -ne 3 ]]; then
             echo "The tag '$tag_name'  is invalid" 1>&2
             exit 1
           fi
           echo "::set-env name=TAG_NAME::$version_number"              
    - name: Google Cloud Platform (GCP) CLI - gcloud
      uses: actions-hub/gcloud@275.0.0
      env:
        # Project id
        PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        # GCP authorization credentials
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      with:
          args: auth list
    
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13.5
      id: go
    
    - name: Setup Terraform environment
      uses: marocchino/setup-terraform@v1.0.1
      with:
        # The terraform version to download (if necessary) and use. Example: 0.12.13
        version: 0.12.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
      with:
        submodules: true
      
    - name: Get dependencies
      run: |
        cd ./test
        go mod download

    - name: Build
      run: |
        echo "$GCP_KEY" | base64 -d > /tmp/account.json
        export GOOGLE_APPLICATION_CREDENTIALS="/tmp/account.json"
        cd ./test
        go test -v -timeout 90m  yugabyte_test.go

